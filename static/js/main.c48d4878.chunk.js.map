{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/NewMovieField/NewMovieField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","NewMovieField","memo","value","handleOnChange","checkValidation","isValid","htmlFor","type","placeholder","id","onChange","event","target","onBlur","propTypes","PropTypes","string","isRequired","func","bool","NewMovie","initState","fields","isTouched","isButtonDisabled","state","setValue","setState","prevState","setValidation","setTouched","Boolean","test","Object","values","every","field","preventDefault","props","addMovie","onSubmit","this","disabled","Component","App","moviesFromServer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c48d4878.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const NewMovieField = memo(\n  ({ title, value, handleOnChange, checkValidation, isValid }) => (\n    <div className=\"form__item\">\n      <label htmlFor={`field${title}`}>{title}</label>\n      <input\n        type=\"text\"\n        placeholder={`${title}...`}\n        className={`form__input ${!isValid && 'form__input-invalid'}`}\n        id={`field${title}`}\n        value={value}\n        onChange={(event) => {\n          handleOnChange(title, event.target.value);\n        }}\n        onBlur={() => checkValidation(title)}\n      />\n      {\n        !isValid && <small className=\"form__error\">Field is invalid</small>\n      }\n    </div>\n  ),\n);\n\nNewMovieField.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  handleOnChange: PropTypes.func.isRequired,\n  checkValidation: PropTypes.func.isRequired,\n  isValid: PropTypes.bool.isRequired,\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport PropTypes from 'prop-types';\nimport { NewMovieField } from '../NewMovieField/NewMovieField';\n\nexport class NewMovie extends Component {\n  initState = {\n    movie: {\n      title: '',\n      description: '',\n      imgUrl: '',\n      imdbUrl: '',\n      imdbId: '',\n    },\n    fields: {\n      title: {\n        isTouched: false,\n        isValid: true,\n      },\n      imgUrl: {\n        isTouched: false,\n        isValid: true,\n      },\n      imdbUrl: {\n        isTouched: false,\n        isValid: true,\n      },\n      imdbId: {\n        isTouched: false,\n        isValid: true,\n      },\n    },\n    isButtonDisabled: true,\n  }\n\n  state = {\n    ...this.initState,\n  };\n\n  setValue = (key, value) => {\n    this.setState(prevState => ({\n      movie: {\n        ...prevState.movie,\n        [key]: value,\n      },\n    }));\n\n    if (this.state.fields[key].isTouched) {\n      this.setValidation(key);\n    }\n  }\n\n  setTouched = (key) => {\n    this.setState(prevState => ({\n      fields: {\n        ...prevState.fields,\n        [key]: {\n          ...prevState.fields[key],\n          isTouched: true,\n        },\n      },\n    }));\n  }\n\n  setValidation = (key) => {\n    // eslint-disable-next-line max-len\n    const pattern = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i;\n\n    const isValid = (key === 'title' || key === 'imdbId')\n      ? Boolean(this.state.movie[key])\n      : pattern.test(this.state.movie[key]);\n\n    this.setState(prevState => ({\n      fields: {\n        ...prevState.fields,\n        [key]: {\n          isTouched: true,\n          isValid,\n        },\n      },\n    }));\n\n    this.#setButton();\n  }\n\n  #setButton = () => {\n    this.setState(prevState => ({\n      isButtonDisabled: !Object.values(prevState.fields)\n        .every(field => field.isTouched && field.isValid),\n    }));\n  }\n\n  #handleSubmit = (event) => {\n    event.preventDefault();\n    this.setState({ ...this.initState });\n    this.props.addMovie(this.state.movie);\n  }\n\n  render() {\n    return (\n      <form className=\"form\" onSubmit={this.#handleSubmit}>\n        <NewMovieField\n          title=\"title\"\n          value={this.state.movie.title}\n          handleOnChange={this.setValue}\n          checkValidation={this.setValidation}\n          isValid={this.state.fields.title.isValid}\n        />\n        <div className=\"form__item\">\n          <label htmlFor=\"fieldDescription\">Description</label>\n          <textarea\n            placeholder=\"Description...\"\n            className=\"form__textarea\"\n            id=\"fieldDescription\"\n            value={this.state.movie.description}\n            onChange={(event) => {\n              this.setValue('description', event.target.value);\n            }}\n          />\n        </div>\n        <NewMovieField\n          title=\"imgUrl\"\n          value={this.state.movie.imgUrl}\n          handleOnChange={this.setValue}\n          checkValidation={this.setValidation}\n          isValid={this.state.fields.imgUrl.isValid}\n        />\n        <NewMovieField\n          title=\"imdbUrl\"\n          value={this.state.movie.imdbUrl}\n          handleOnChange={this.setValue}\n          checkValidation={this.setValidation}\n          isValid={this.state.fields.imdbUrl.isValid}\n        />\n        <NewMovieField\n          title=\"imdbId\"\n          value={this.state.movie.imdbId}\n          handleOnChange={this.setValue}\n          checkValidation={this.setValidation}\n          isValid={this.state.fields.imdbId.isValid}\n        />\n        <button\n          className=\"form__button\"\n          type=\"submit\"\n          disabled={this.state.isButtonDisabled}\n        >\n          Submit\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [\n        ...prevState.movies,\n        { ...movie },\n      ],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}